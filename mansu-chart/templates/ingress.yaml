apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.fullnameOverride }}
  namespace: {{ .Values.namespace }}
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health   
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/group.name: "mansu-sbx"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-2:169761230259:certificate/f5d1af79-584d-4529-9831-30958513f72f
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName | default "alb"}}
  rules:
  {{- if .Values.ingress.host }}
    - host: "{{ .Values.ingress.host }}.{{ .Values.ingress.domain }}"
  {{- else }}
    - host: "{{ .Values.ingress.domain }}"
  {{- end }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Values.fullnameOverride}}
                port:
                {{- $service := .Values.service | default dict }}
                  number: {{ $service.port | default 80 }}
            path: /
            pathType: Prefix
